From 4d90b9ecb4ab16672c8dfc82bca3dc6d33f9f8a5 Mon Sep 17 00:00:00 2001
From: A1ca7raz <7345998+A1ca7raz@users.noreply.github.com>
Date: Fri, 1 Sep 2023 13:41:32 +0800
Subject: [PATCH 1/2] merge PR#269 from KDE to Make window-specific overrides
 work on Wayland

merge PR#267 from KDE to Port to DecoratedClient::windowClass()
---
 CMakeLists.txt                   |   6 +-
 breezesettingsprovider.cpp       |  15 +--
 config/breezedetectwidget.cpp    | 161 +++++--------------------------
 config/breezedetectwidget.h      |  64 ++----------
 config/breezeexceptiondialog.cpp |  24 +----
 config/ui/breezedetectwidget.ui  | 146 ----------------------------
 6 files changed, 44 insertions(+), 372 deletions(-)
 delete mode 100644 config/ui/breezedetectwidget.ui

diff --git a/CMakeLists.txt b/CMakeLists.txt
index dc347f0..92e169b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -27,7 +27,7 @@ find_package(KDecoration2 REQUIRED)
 # old stuff
 add_definitions(-DTRANSLATION_DOMAIN="breeze_kwin_deco")
 
-find_package(KF5 REQUIRED COMPONENTS CoreAddons GuiAddons ConfigWidgets WindowSystem I18n IconThemes)
+find_package(KF5 REQUIRED COMPONENTS CoreAddons GuiAddons ConfigWidgets I18n IconThemes)
 find_package(Qt5 CONFIG REQUIRED COMPONENTS DBus)
 
 ### XCB
@@ -82,7 +82,6 @@ set(sierrabreezeenhanced_config_SRCS
 
 set(sierrabreezeenhanced_config_PART_FORMS
    config/ui/breezeconfigurationui.ui
-   config/ui/breezedetectwidget.ui
    config/ui/breezeexceptiondialog.ui
    config/ui/breezeexceptionlistwidget.ui
 )
@@ -108,8 +107,7 @@ target_link_libraries(sierrabreezeenhanced
         KF5::ConfigWidgets
         KF5::GuiAddons
         KF5::I18n
-        KF5::IconThemes
-        KF5::WindowSystem)
+        KF5::IconThemes)
 
 if(BREEZE_HAVE_X11)
   target_link_libraries(sierrabreezeenhanced
diff --git a/breezesettingsprovider.cpp b/breezesettingsprovider.cpp
index bd53d70..16d0243 100644
--- a/breezesettingsprovider.cpp
+++ b/breezesettingsprovider.cpp
@@ -22,8 +22,6 @@
 
 #include "breezeexceptionlist.h"
 
-#include <KWindowInfo>
-
 #include <QRegularExpression>
 #include <QTextStream>
 
@@ -73,7 +71,7 @@ namespace Breeze
     {
 
         QString windowTitle;
-        QString className;
+        QString windowClass;
 
         // get the client
         const auto client = decoration->client().toStrongRef();
@@ -111,16 +109,7 @@ namespace Breeze
                 default:
                 case InternalSettings::ExceptionWindowClassName:
                 {
-                    if( className.isEmpty() )
-                    {
-                        // retrieve class name
-                        KWindowInfo info( client->windowId(), {}, NET::WM2WindowClass );
-                        QString window_className( QString::fromUtf8(info.windowClassName()) );
-                        QString window_class( QString::fromUtf8(info.windowClassClass()) );
-                        className = window_className + QStringLiteral(" ") + window_class;
-                    }
-
-                    value = className;
+                    value = windowClass.isEmpty() ? (windowClass = client->windowClass()) : windowClass;
                     break;
                 }
 
diff --git a/config/breezedetectwidget.cpp b/config/breezedetectwidget.cpp
index fff5b53..aba0e87 100644
--- a/config/breezedetectwidget.cpp
+++ b/config/breezedetectwidget.cpp
@@ -29,154 +29,45 @@
 
 #include "breezedetectwidget.h"
 
-#include "breeze.h"
-
-#include <KWindowInfo>
-
-#include <QPushButton>
-#include <QMouseEvent>
-#include <config-breeze.h>
-#if BREEZE_HAVE_X11
-#include <QX11Info>
-#include <xcb/xcb.h>
-#endif
+#include <QDBusConnection>
+#include <QDBusMessage>
+#include <QDBusPendingCallWatcher>
+#include <QDBusPendingReply>
 
 namespace Breeze
 {
 
     //_________________________________________________________
-    DetectDialog::DetectDialog( QWidget* parent ):
-        QDialog( parent )
-    {
-
-        // setup
-        m_ui.setupUi( this );
-
-        connect( m_ui.buttonBox->button( QDialogButtonBox::Cancel ), &QAbstractButton::clicked, this, &QWidget::close );
-        m_ui.windowClassCheckBox->setChecked( true );
-
-#if BREEZE_HAVE_X11
-        if (QX11Info::isPlatformX11()) {
-            // create atom
-            xcb_connection_t* connection( QX11Info::connection() );
-            const QString atomName( QStringLiteral( "WM_STATE" ) );
-            xcb_intern_atom_cookie_t cookie( xcb_intern_atom( connection, false, atomName.size(), qPrintable( atomName ) ) );
-            QScopedPointer<xcb_intern_atom_reply_t, QScopedPointerPodDeleter> reply( xcb_intern_atom_reply( connection, cookie, nullptr) );
-            m_wmStateAtom = reply ? reply->atom : 0;
-        }
-#endif
-
-    }
-
-    //_________________________________________________________
-    void DetectDialog::detect(  WId window )
-    {
-        if( window == 0 ) selectWindow();
-        else readWindow( window );
-    }
-
-    //_________________________________________________________
-    void DetectDialog::readWindow( WId window )
-    {
-
-        if( window == 0 )
-        {
-            emit detectionDone( false );
-            return;
-        }
-
-        m_info.reset(new KWindowInfo( window, NET::WMAllProperties, NET::WM2AllProperties ));
-        if( !m_info->valid())
-        {
-            emit detectionDone( false );
-            return;
-        }
-
-        const QString wmClassClass( QString::fromUtf8( m_info->windowClassClass() ) );
-        const QString wmClassName( QString::fromUtf8( m_info->windowClassName() ) );
-
-        m_ui.windowClass->setText( QStringLiteral( "%1 (%2 %3)" ).arg( wmClassClass ).arg( wmClassName ).arg( wmClassClass ) );
-        m_ui.windowTitle->setText( m_info->name() );
-        emit detectionDone( exec() == QDialog::Accepted );
-
-    }
-
-    //_________________________________________________________
-    void DetectDialog::selectWindow()
+    DetectDialog::DetectDialog(QObject* parent):
+        QObject(parent)
     {
-
-        // use a dialog, so that all user input is blocked
-        // use WX11BypassWM and moving away so that it's not actually visible
-        // grab only mouse, so that keyboard can be used e.g. for switching windows
-        m_grabber = new QDialog( nullptr, Qt::X11BypassWindowManagerHint );
-        m_grabber->move( -1000, -1000 );
-        m_grabber->setModal( true );
-        m_grabber->show();
-
-        // need to explicitly override cursor for Qt5
-        qApp->setOverrideCursor( Qt::CrossCursor );
-        m_grabber->grabMouse( Qt::CrossCursor );
-        m_grabber->installEventFilter( this );
-
     }
 
     //_________________________________________________________
-    bool DetectDialog::eventFilter( QObject* o, QEvent* e )
+    void DetectDialog::detect()
     {
-        // check object and event type
-        if( o != m_grabber ) return false;
-        if( e->type() != QEvent::MouseButtonRelease ) return false;
-
-        // need to explicitly release cursor for Qt5
-        qApp->restoreOverrideCursor();
-
-        // delete old m_grabber
-        delete m_grabber;
-        m_grabber = nullptr;
-
-        // check button
-        if( static_cast< QMouseEvent* >( e )->button() != Qt::LeftButton ) return true;
-
-        // read window information
-        readWindow( findWindow() );
-
-        return true;
+        QDBusMessage message = QDBusMessage::createMethodCall(QStringLiteral("org.kde.KWin"),
+                                                            QStringLiteral("/KWin"),
+                                                            QStringLiteral("org.kde.KWin"),
+                                                            QStringLiteral("queryWindowInfo"));
+
+        QDBusPendingReply<QVariantMap> asyncReply = QDBusConnection::sessionBus().asyncCall(message);
+        QDBusPendingCallWatcher *watcher = new QDBusPendingCallWatcher(asyncReply, this);
+        connect(watcher, &QDBusPendingCallWatcher::finished, this, [this](QDBusPendingCallWatcher *self) {
+            QDBusPendingReply<QVariantMap> reply = *self;
+            self->deleteLater();
+            if (!reply.isValid()) {
+                Q_EMIT detectionDone(false);
+                return;
+            }
+            m_properties = reply.value();
+            Q_EMIT detectionDone(true);
+        });
     }
 
     //_________________________________________________________
-    WId DetectDialog::findWindow()
+    QVariantMap DetectDialog::properties() const
     {
-
-        #if BREEZE_HAVE_X11
-        if (!QX11Info::isPlatformX11()) {
-            return 0;
-        }
-        // check atom
-        if( !m_wmStateAtom ) return 0;
-
-        xcb_connection_t* connection( QX11Info::connection() );
-        xcb_window_t parent( QX11Info::appRootWindow() );
-
-        // why is there a loop of only 10 here
-        for( int i = 0; i < 10; ++i )
-        {
-
-            // query pointer
-            xcb_query_pointer_cookie_t pointerCookie( xcb_query_pointer( connection, parent ) );
-            QScopedPointer<xcb_query_pointer_reply_t, QScopedPointerPodDeleter> pointerReply( xcb_query_pointer_reply( connection, pointerCookie, nullptr ) );
-            if( !( pointerReply && pointerReply->child ) ) return 0;
-
-            const xcb_window_t child( pointerReply->child );
-            xcb_get_property_cookie_t cookie( xcb_get_property( connection, 0, child, m_wmStateAtom, XCB_GET_PROPERTY_TYPE_ANY, 0, 0 ) );
-            QScopedPointer<xcb_get_property_reply_t, QScopedPointerPodDeleter> reply( xcb_get_property_reply( connection, cookie, nullptr ) );
-            if( reply  && reply->type ) return child;
-            else parent = child;
-
-        }
-        #endif
-
-        return 0;
-
+        return m_properties;
     }
-
 }
diff --git a/config/breezedetectwidget.h b/config/breezedetectwidget.h
index 54e51da..b595e85 100644
--- a/config/breezedetectwidget.h
+++ b/config/breezedetectwidget.h
@@ -30,21 +30,13 @@
 // IN THE SOFTWARE.
 //////////////////////////////////////////////////////////////////////////////
 
-#include "breezesettings.h"
-#include "ui_breezedetectwidget.h"
-
-#include <QByteArray>
-#include <QCheckBox>
-#include <QDialog>
-#include <QEvent>
-#include <QLabel>
-
-#include <kwindowsystem.h>
+#include <QObject>
+#include <QVariantMap>
 
 namespace Breeze
 {
 
-    class DetectDialog : public QDialog
+    class DetectDialog : public QObject
     {
 
         Q_OBJECT
@@ -52,60 +44,22 @@ namespace Breeze
         public:
 
         //* constructor
-        explicit DetectDialog( QWidget* );
+        explicit DetectDialog(QObject *parent = nullptr);
 
         //* read window properties or select one from mouse grab
-        void detect( WId window );
-
-        //* selected class
-        QByteArray selectedClass() const;
-
-        //* window information
-        const KWindowInfo& windowInfo() const
-        { return *(m_info.data()); }
+        void detect();
 
-        //* exception type
-        InternalSettings::EnumExceptionType exceptionType() const
-        {
-            if( m_ui.windowClassCheckBox->isChecked() ) return InternalSettings::ExceptionWindowClassName;
-            else if( m_ui.windowTitleCheckBox->isChecked() ) return InternalSettings::ExceptionWindowTitle;
-            else return InternalSettings::ExceptionWindowClassName;
-        }
+        ///* window properties
+        QVariantMap properties() const;
 
         Q_SIGNALS:
 
         void detectionDone( bool );
 
-        protected:
-
-        bool eventFilter( QObject* o, QEvent* e ) override;
-
         private:
 
-        //* select window from grab
-        void selectWindow();
-
-        //* read window properties
-        void readWindow( WId window );
-
-        //* find window under cursor
-        WId findWindow();
-
-        //* execute
-        void executeDialog();
-
-        //* ui
-        Ui::BreezeDetectWidget m_ui;
-
-        //* invisible dialog used to grab mouse
-        QDialog* m_grabber = nullptr;
-
-        //* current window information
-        QScopedPointer<KWindowInfo> m_info;
-
-        //* wm state atom
-        quint32 m_wmStateAtom = 0;
-
+        //* properties
+        QVariantMap m_properties;
     };
 
 } // namespace
diff --git a/config/breezeexceptiondialog.cpp b/config/breezeexceptiondialog.cpp
index 4590cd0..b91f44a 100644
--- a/config/breezeexceptiondialog.cpp
+++ b/config/breezeexceptiondialog.cpp
@@ -27,10 +27,6 @@
 #include "breezedetectwidget.h"
 #include "config-breeze.h"
 
-#if BREEZE_HAVE_X11
-#include <QX11Info>
-#endif
-
 namespace Breeze
 {
 
@@ -68,13 +64,6 @@ namespace Breeze
         m_ui.opacityOverrideLabelSpinBox->setSpecialValueText(tr("None"));
         connect( m_ui.opacityOverrideLabelSpinBox, QOverload<int>::of(&QSpinBox::valueChanged), [=](int /*i*/){updateChanged();} );
         connect( m_ui.isDialog, &QAbstractButton::clicked, this, &ExceptionDialog::updateChanged );
-
-        // hide detection dialog on non X11 platforms
-        #if BREEZE_HAVE_X11
-        if( !QX11Info::isPlatformX11() ) m_ui.detectDialogButton->hide();
-        #else
-        m_ui.detectDialogButton->hide();
-        #endif
     }
 
     //___________________________________________
@@ -177,7 +166,7 @@ namespace Breeze
             connect( m_detectDialog, &DetectDialog::detectionDone, this, &ExceptionDialog::readWindowProperties );
         }
 
-        m_detectDialog->detect(0);
+        m_detectDialog->detect();
 
     }
 
@@ -188,22 +177,19 @@ namespace Breeze
         if( valid )
         {
 
-            // type
-            m_ui.exceptionType->setCurrentIndex( m_detectDialog->exceptionType() );
-
             // window info
-            const KWindowInfo& info( m_detectDialog->windowInfo() );
+            const QVariantMap properties = m_detectDialog->properties();
 
-            switch( m_detectDialog->exceptionType() )
+            switch(m_ui.exceptionType->currentIndex())
             {
 
                 default:
                 case InternalSettings::ExceptionWindowClassName:
-                m_ui.exceptionEditor->setText( QString::fromUtf8( info.windowClassClass() ) );
+                m_ui.exceptionEditor->setText(properties.value(QStringLiteral("resourceClass")).toString());
                 break;
 
                 case InternalSettings::ExceptionWindowTitle:
-                m_ui.exceptionEditor->setText( info.name() );
+                m_ui.exceptionEditor->setText(properties.value(QStringLiteral("caption")).toString());
                 break;
 
             }
diff --git a/config/ui/breezedetectwidget.ui b/config/ui/breezedetectwidget.ui
deleted file mode 100644
index 5db36c8..0000000
--- a/config/ui/breezedetectwidget.ui
+++ /dev/null
@@ -1,146 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ui version="4.0">
- <class>BreezeDetectWidget</class>
- <widget class="QDialog" name="BreezeDetectWidget">
-  <property name="geometry">
-   <rect>
-    <x>0</x>
-    <y>0</y>
-    <width>400</width>
-    <height>239</height>
-   </rect>
-  </property>
-  <property name="windowTitle">
-   <string>Dialog</string>
-  </property>
-  <layout class="QVBoxLayout" name="verticalLayout">
-   <item>
-    <widget class="QGroupBox" name="groupBox">
-     <property name="title">
-      <string>Information about Selected Window</string>
-     </property>
-     <layout class="QGridLayout" name="gridLayout">
-      <item row="0" column="0">
-       <widget class="QLabel" name="label">
-        <property name="text">
-         <string>Class: </string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="0" column="1">
-       <widget class="QLabel" name="windowClass">
-        <property name="text">
-         <string notr="true">TextLabel</string>
-        </property>
-       </widget>
-      </item>
-      <item row="1" column="0">
-       <widget class="QLabel" name="label_2">
-        <property name="text">
-         <string>Title: </string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="1" column="1">
-       <widget class="QLabel" name="windowTitle">
-        <property name="text">
-         <string notr="true">TextLabel</string>
-        </property>
-       </widget>
-      </item>
-     </layout>
-    </widget>
-   </item>
-   <item>
-    <widget class="QGroupBox" name="groupBox_2">
-     <property name="title">
-      <string>Window Property Selection</string>
-     </property>
-     <layout class="QVBoxLayout" name="verticalLayout_2">
-      <item>
-       <widget class="QRadioButton" name="windowClassCheckBox">
-        <property name="text">
-         <string>Use window class (whole application)</string>
-        </property>
-       </widget>
-      </item>
-      <item>
-       <widget class="QRadioButton" name="windowTitleCheckBox">
-        <property name="locale">
-         <locale language="French" country="France"/>
-        </property>
-        <property name="text">
-         <string>Use window title</string>
-        </property>
-       </widget>
-      </item>
-      <item>
-       <spacer name="verticalSpacer">
-        <property name="orientation">
-         <enum>Qt::Vertical</enum>
-        </property>
-        <property name="sizeHint" stdset="0">
-         <size>
-          <width>20</width>
-          <height>40</height>
-         </size>
-        </property>
-       </spacer>
-      </item>
-     </layout>
-    </widget>
-   </item>
-   <item>
-    <widget class="QDialogButtonBox" name="buttonBox">
-     <property name="orientation">
-      <enum>Qt::Horizontal</enum>
-     </property>
-     <property name="standardButtons">
-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
-     </property>
-    </widget>
-   </item>
-  </layout>
- </widget>
- <resources/>
- <connections>
-  <connection>
-   <sender>buttonBox</sender>
-   <signal>accepted()</signal>
-   <receiver>BreezeDetectWidget</receiver>
-   <slot>accept()</slot>
-   <hints>
-    <hint type="sourcelabel">
-     <x>248</x>
-     <y>254</y>
-    </hint>
-    <hint type="destinationlabel">
-     <x>157</x>
-     <y>274</y>
-    </hint>
-   </hints>
-  </connection>
-  <connection>
-   <sender>buttonBox</sender>
-   <signal>rejected()</signal>
-   <receiver>BreezeDetectWidget</receiver>
-   <slot>reject()</slot>
-   <hints>
-    <hint type="sourcelabel">
-     <x>316</x>
-     <y>260</y>
-    </hint>
-    <hint type="destinationlabel">
-     <x>286</x>
-     <y>274</y>
-    </hint>
-   </hints>
-  </connection>
- </connections>
-</ui>

From 3baa96c638dfdf44d3cf2d40fec9fabfc6031ed2 Mon Sep 17 00:00:00 2001
From: A1ca7raz <7345998+A1ca7raz@users.noreply.github.com>
Date: Fri, 1 Sep 2023 14:07:25 +0800
Subject: [PATCH 2/2] test: remove dialog check with KWindowInfo

---
 breezesettingsprovider.cpp | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/breezesettingsprovider.cpp b/breezesettingsprovider.cpp
index 16d0243..6ed1874 100644
--- a/breezesettingsprovider.cpp
+++ b/breezesettingsprovider.cpp
@@ -85,13 +85,13 @@ namespace Breeze
             // discard exceptions with empty exception pattern
             if( internalSettings->exceptionPattern().isEmpty() ) continue;
 
-            if (internalSettings->isDialog())
-            {
-              KWindowInfo info(client->windowId(), NET::WMWindowType);
-              if (info.valid() && info.windowType(NET::NormalMask | NET::DialogMask) != NET::Dialog) {
-                continue;
-              }
-            }
+            // if (internalSettings->isDialog())
+            // {
+            //   KWindowInfo info(client->windowId(), NET::WMWindowType);
+            //   if (info.valid() && info.windowType(NET::NormalMask | NET::DialogMask) != NET::Dialog) {
+            //     continue;
+            //   }
+            // }
 
             /*
             decide which value is to be compared
