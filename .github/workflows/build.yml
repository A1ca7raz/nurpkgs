name: "Build package"

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package to build
        required: false
        type: string
      push_cache:
        description: Push cache
        required: true
        default: true
        type: boolean
      pre_check:
        description: Check evaluation
        required: true
        default: true
        type: boolean
  workflow_call:
    inputs:
      package:
        description: Package to build
        required: false
        type: string
      push_cache:
        description: Push cache
        default: true
        type: boolean
      pre_check:
        description: Check evaluation
        default: false
        type: boolean

env:
  nix_conf: |
    keep-env-derivations = true
    keep-outputs = true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    env:
      CI_MODE: 1
      CACHIX_CACHE: ${{ secrets.CACHIX_CACHE }}
      CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_ACCESS_TOKEN }}

    steps:
    - name: 0-1. Maximize space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        echo "Available space:"
        df -h

    - name: 0-2. Checkout repository
      uses: actions/checkout@v4
      with:
        ref: 'main'

    - name: 0-3. Install Nix
      uses: nixbuild/nix-quick-install-action@v30
      with:
        nix_conf: ${{ env.nix_conf }}

    - name: 0.4. Setup cache
      uses: nix-community/cache-nix-action@v6
      with:
        primary-key: nur-${{ runner.os }}-individual-${{ inputs.package }}-${{ hashFiles('flake.lock', 'pkgs/_sources/generated.nix') }}
        restore-prefixes-first-match: nur-${{ runner.os }}-shared-${{ hashFiles('flake.lock', 'pkgs/_sources/generated.nix') }}
        gc-max-store-size-linux: 1G
        purge: true
        purge-prefixes: hub-${{ runner.os }}-individual-${{ inputs.package }}-
        purge-created: 0
        purge-primary-key: never

    - name: 0-5. Setup Cachix
      uses: cachix/cachix-action@v16
      with:
        name: '${{ secrets.CACHIX_CACHE }}'
        authToken: '${{ secrets.CACHIX_ACCESS_TOKEN }}'
        skipPush: true

    - name: 1-1. Show flake metadata
      if: ${{ inputs.pre_check == true }}
      run: nix flake metadata

    - name: 1-2. Show flake information
      if: ${{ inputs.pre_check == true }}
      run: nix flake show

    - name: 1-3. Check evaluation
      if: ${{ inputs.pre_check == true }}
      run: nix flake check --no-build --no-allow-import-from-derivation

    - name: 2-1. Build ${{ inputs.package }}
      run: |
        nix build .#packages.x86_64-linux.${{ inputs.package }} -v --show-trace

    - name: 3-1. Push cache to Cachix
      if: ${{ inputs.push_cache == true }}
      run: bash ./.github/push_cache.sh ${{ inputs.package }}
